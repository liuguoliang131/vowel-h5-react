{"version":3,"file":"static/js/833.c72c753e.chunk.js","mappings":"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","sources":["pages/poster/index.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\r\nimport './index.scss'\r\nimport { Toast } from 'antd-mobile'\r\nimport Crumbs1 from '../../components/crumbs1'\r\nimport utils from '../../utils/index'\r\nimport QRCode from 'qrcodejs2'\r\nimport { promotionSharePosterListApi } from '../../axios/api'\r\nimport { useLocation } from 'react-router-dom'\r\nimport axios from 'axios'\r\ndocument.title = '活动海报'\r\nfunction Poster () {\r\n  const [data, setData] = useState({\r\n    user_name: '',\r\n    user_avatar: '',\r\n    poster_url: ''\r\n  })\r\n  const fullRef = useRef()\r\n  const viewRef = useRef()\r\n  const location = useLocation()\r\n  // 生成二维码函数\r\n  const getQrcode = (qWidth, qHeight, qText, qRender, dom) => {\r\n    return new QRCode(dom, {\r\n      width: qWidth,\r\n      height: qHeight,\r\n      text: qText,\r\n      render: qRender,\r\n      correctLevel: 1\r\n    })\r\n  }\r\n  // 转换成blob\r\n  const getBlob = (base64) => {\r\n    const mimeString = base64.split(',')[0].split(':')[1].split(';')[0] // mime类型\r\n    const byteString = atob(base64.split(',')[1]) // base64 解码\r\n    const arrayBuffer = new ArrayBuffer(byteString.length) // 创建缓冲数组\r\n    const intArray = new Uint8Array(arrayBuffer) // 创建视图\r\n    for (let i = 0; i < byteString.length; i += 1) {\r\n      intArray[i] = byteString.charCodeAt(i)\r\n    }\r\n    return new Blob([intArray], {\r\n      type: mimeString\r\n    })\r\n  }\r\n  const blobToBase64 = (blob) => {\r\n    console.log('blobToBase64 1', blob)\r\n    const fileReader = new FileReader()\r\n    fileReader.readAsDataURL(blob)\r\n    return new Promise((resolve) => {\r\n      fileReader.onload = (e) => {\r\n        resolve(e.target.result)\r\n      }\r\n    })\r\n  }\r\n  // 获取二进制流 转base 转blob\r\n  const getImageToBlob = async (url) => {\r\n    const res = await axios.get(url, { responseType: 'blob' })\r\n    const baseData = await blobToBase64(new Blob([res.data], { type: res.headers['content-type'] }))\r\n    // const blob = getBlob(baseData)\r\n    return baseData\r\n  }\r\n  const getData = async () => {\r\n    const res = await promotionSharePosterListApi({\r\n      promotion_id: location.state.id\r\n    })\r\n    if (res.code !== 0) {\r\n      return false\r\n    }\r\n    const resData = {\r\n      posterUrl: '',\r\n      userAvatar: ''\r\n    }\r\n    resData.posterUrl = await getImageToBlob(res.data.poster_url)\r\n    resData.userAvatar = await getImageToBlob(res.data.user_avatar)\r\n    console.log('resData', resData)\r\n    setData({ ...res.data, ...resData })\r\n  }\r\n\r\n  const initCanvas = () => {\r\n    console.log('viewRef', viewRef)\r\n    if (fullRef.current && viewRef.current) {\r\n      // 获取父盒子宽度\r\n      const full = fullRef.current\r\n      const canvas = viewRef.current\r\n      canvas.width = full.offsetWidth\r\n      canvas.height = full.offsetHeight\r\n      // 参照比例\r\n      const scaleWidth = 375\r\n      const scaleHeight = 517\r\n      const ava = {\r\n        x: 0,\r\n        y: 0,\r\n        width: 0,\r\n        height: 0\r\n      }// 头像\r\n      ava.x = full.offsetWidth * 14 / scaleWidth\r\n      ava.y = full.offsetHeight * 17 / scaleHeight\r\n      ava.width = full.offsetWidth * 30 / scaleWidth\r\n      ava.height = full.offsetWidth * 30 / scaleWidth\r\n      // 文本\r\n      const title = {\r\n        x: full.offsetWidth * 50 / scaleWidth,\r\n        y: full.offsetHeight * 37 / scaleHeight,\r\n        fontSize: full.offsetHeight * 15 / scaleHeight\r\n      }\r\n      // 二维码\r\n      const qr = {\r\n        x: full.offsetWidth * 147 / scaleWidth,\r\n        y: full.offsetHeight * 405 / scaleHeight,\r\n        width: full.offsetWidth * 82 / scaleWidth,\r\n        height: full.offsetWidth * 82 / scaleWidth\r\n      }\r\n      const ctx = canvas.getContext('2d')\r\n      // 创建图片 背景图\r\n      let image = null\r\n      image = new Image()\r\n      image.crossOrigin = 'anonymous'\r\n      image.setAttribute('crossOrigin', 'anonymous')\r\n\r\n      // 二维码图片\r\n      const codeImg = new Image()\r\n      codeImg.setAttribute('crossOrigin', 'anonymous')\r\n      codeImg.crossOrigin = 'anonymous'\r\n      // 生成二维码\r\n      const qrCanvas = document.createElement('div')\r\n      qrCanvas.height = qr.height\r\n      qrCanvas.width = qr.width\r\n      const shareUrl = window.location.protocol + '//' + window.location.host + `/#/layout/home?id=${location.state.id}&share_sign=${data.share_sign}`\r\n      const qrcodeObj = getQrcode(qr.width, qr.height, shareUrl, 'canvas', qrCanvas)\r\n      const codeCanvas = qrcodeObj._el.querySelector('canvas')\r\n      const base64Text = codeCanvas.toDataURL('image/png')\r\n      // const blob = getBlob(base64Text) // 将base64转换成blob对象\r\n      console.log('qrcodeObj src', qrcodeObj._el.children[1])\r\n      codeImg.onload = function () {\r\n        console.log('codeImg.src1', codeImg.src)\r\n        ctx.drawImage(codeImg, qr.x, qr.y, qr.width, qr.width)\r\n      }\r\n      codeImg.onerror = function (e) {\r\n      }\r\n\r\n      // 设置图片地址\r\n      // image.src = data.poster_url + '?v=' + Math.random()\r\n      // image.src = data.posterUrl\r\n      // 必须要在onLoad之后再进行绘制图片，否则不会渲染\r\n      image.onerror = function (e) {\r\n        console.log('image error', e)\r\n      }\r\n      image.onload = function () {\r\n        console.log('image')\r\n        // 4各参数 图片的起始坐标和宽高\r\n        ctx.drawImage(image, 0, 0, full.offsetWidth, full.offsetHeight)\r\n\r\n        // 绘制文本\r\n        ctx.font = `${title.fontSize}px PingFang SC` // 设置文案大小和字体\r\n        // ctx.direction = 'ltr' // 文本方向从左向右\r\n        ctx.textAlign = 'left' // 左对齐\r\n        // ctx.fillStyle = '#ffff'\r\n        console.log('title.x, title.y', title.x, title.y)\r\n        ctx.fillText(data.user_name, title.x, title.y)\r\n\r\n        // 赋值二维码图片 出发加载事件\r\n        // if (qrcodeObj._el.children[1].src.includes('data:')) {\r\n        //   Toast.show({\r\n        //     content: '1'\r\n        //   })\r\n        //   codeImg.src = qrcodeObj._el.children[1].src\r\n        // } else {\r\n        //   Toast.show({\r\n        //     content: '2'\r\n        //   })\r\n        //   // const before = 'data:image/jpeg;base64,'\r\n        //   // codeImg.src = before + qrcodeObj._el.children[1].src\r\n        //   codeImg.src = blob\r\n        //   alert(codeImg.src)\r\n        // }\r\n        codeImg.src = base64Text\r\n        // alert(codeImg.src)\r\n\r\n        // 层级之上\r\n        const avaImg = new Image()\r\n        avaImg.crossOrigin = 'anonymous'\r\n        avaImg.setAttribute('crossOrigin', 'anonymous')\r\n        avaImg.onload = function () {\r\n          console.log('ava.x, ava.y, ava.width, ava.height', ava.x, ava.y, ava.width, ava.height)\r\n          // 创建圆形裁剪路径\r\n          ctx.arc(ava.x + (ava.width / 2), ava.y + (ava.height / 2), ava.width / 2, 0, Math.PI * 2)\r\n          ctx.clip()\r\n          // 创建完后绘制\r\n          ctx.drawImage(avaImg, ava.x, ava.y, ava.width, ava.height)\r\n        }\r\n        avaImg.src = data.userAvatar\r\n        console.log('avaImg src', avaImg.src)\r\n      }\r\n      image.src = data.posterUrl\r\n      console.log('image.src', image)\r\n    }\r\n  }\r\n\r\n  // 保存海报到本地\r\n  const handleSavePoster = () => {\r\n    // onSave()\r\n    try {\r\n      const posterBase = viewRef.current.toDataURL('image/png;base64')\r\n      utils.ownApp(() => {\r\n        utils.saveBase64Image(posterBase)\r\n      }, () => {\r\n        const btn = document.createElement('a')\r\n        btn.download = '分享海报'\r\n        btn.href = posterBase\r\n        btn.click()\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n      alert(error.message)\r\n    }\r\n  }\r\n  const onSave = () => {\r\n    viewRef.current.toBlob((blob) => {\r\n      const timestamp = Date.now().toString()\r\n      const a = document.createElement('a')\r\n      document.body.append(a)\r\n      a.download = `${timestamp}.png`\r\n      a.href = URL.createObjectURL(blob)\r\n      a.click()\r\n      a.remove()\r\n    })\r\n  }\r\n  const handleShareWebToWX = () => {\r\n    // const title = location.state.title\r\n    // const desc = '苹果手表S7/Airpods pro/免单奖励等超值大礼等你拿'\r\n    // const url = window.location.origin + '/#/layout/home?share_sign=' + data.share_sign + '&id=' + location.state.id\r\n    // const coverurl = ''\r\n    // utils.shareWebToWX(title, desc, url, coverurl)\r\n  }\r\n  // const bottomRender = () => {\r\n  //   let bottomComponent = null\r\n  //   utils.ownApp(() => {\r\n  //     bottomComponent = (\r\n  //     <div className=\"bottom-box-share\">\r\n  //       <div className=\"line\">\r\n  //         <div className=\"line-1\"></div>\r\n  //         <div className=\"line-1\"></div>\r\n  //       </div>\r\n  //       <div className=\"share-title\">分享至微信或朋友圈</div>\r\n  //       <div className=\"share-btns\">\r\n  //         <div className=\"share-btns-friends\">\r\n  //           <img onClick={() => handleShareWebToWX()} src={require('../../assets/share-wx.png')} alt=\"\" />\r\n  //           <span>微信</span>\r\n  //         </div>\r\n  //         <div className=\"share-btns-friends\">\r\n  //         <img onClick={() => handleShareWebToWX()} src={require('../../assets/share-friends.png')} alt=\"\" />\r\n  //           <span>朋友圈</span>\r\n  //         </div>\r\n  //       </div>\r\n  //     </div>\r\n  //     )\r\n  //   }, () => {\r\n\r\n  //   })\r\n  //   return bottomComponent\r\n  // }\r\n  const bottomRender = () => {\r\n    return (\r\n      <div className=\"bottom-box-share\">\r\n        <div className=\"share-1\">可分享至微信或朋友圈</div>\r\n        <img src={require('../../assets/share-wx.png')} alt=\"\" className=\"share-2\" />\r\n        <img src={require('../../assets/share-friends.png')} alt=\"\" className=\"share-3\" />\r\n      </div>\r\n    )\r\n  }\r\n  useEffect(() => {\r\n    getData()\r\n  }, [])\r\n  useEffect(() => {\r\n    initCanvas()\r\n  }, [viewRef, fullRef, data])\r\n  return (\r\n    <div className=\"poster\">\r\n      <Crumbs1 text=\"抽奖海报\"></Crumbs1>\r\n      {\r\n        data.share_sign\r\n          ? (\r\n            <>\r\n            <div className=\"poster-box\">\r\n            <div className='full' ref={fullRef}>\r\n              <canvas ref={viewRef}></canvas>\r\n            </div>\r\n          </div>\r\n          <div className=\"bottom-box\">\r\n          <a className=\"save-the\" download href=\"javascript:;\" onClick={() => handleSavePoster()}>\r\n            点击保存海报\r\n          </a>\r\n          {\r\n            bottomRender()\r\n          }\r\n        </div>\r\n            </>\r\n\r\n            )\r\n          : null\r\n\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Poster\r\n"],"names":["document","title","useState","user_name","user_avatar","poster_url","data","setData","fullRef","useRef","viewRef","location","useLocation","blobToBase64","blob","console","log","fileReader","FileReader","readAsDataURL","Promise","resolve","onload","e","target","result","getImageToBlob","url","axios","responseType","res","Blob","type","headers","baseData","getData","promotionSharePosterListApi","promotion_id","state","id","code","resData","posterUrl","userAvatar","initCanvas","current","full","canvas","width","offsetWidth","height","offsetHeight","scaleWidth","scaleHeight","ava","x","y","fontSize","qr","ctx","getContext","image","Image","crossOrigin","setAttribute","codeImg","qrCanvas","createElement","shareUrl","window","protocol","host","share_sign","qrcodeObj","qWidth","qHeight","qText","qRender","dom","QRCode","text","render","correctLevel","base64Text","_el","querySelector","toDataURL","children","src","drawImage","onerror","font","textAlign","fillText","avaImg","arc","Math","PI","clip","useEffect","className","ref","download","href","onClick","posterBase","utils","btn","click","error","alert","message","handleSavePoster","require","alt"],"sourceRoot":""}
{"version":3,"file":"static/js/604.41f57d5f.chunk.js","mappings":"4RA0IA,MAjIA,WACEA,QAAQC,IAAI,WACZ,OAAsCC,EAAAA,EAAAA,UAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MAsBjB,GAA8BN,EAAAA,EAAAA,WAAS,GAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KA1BkB,8CA2BlB,0GAKoBC,EAAAA,EAAAA,IAAiB,CACjCC,KAAMT,IANV,OAKQU,EALR,OAQET,GAAe,SAAAU,GAAG,OAAIA,EAAM,CAAV,IAClBd,QAAQC,IAAI,MAAOY,GACdA,EAAIR,MAGPC,GAAQ,SAAAQ,GAAG,wBAAQA,IAAR,OAAgBD,EAAIR,MAApB,IACXK,GAAW,IAHXA,GAAW,GAXf,4CA3BkB,sBA6ClB,IAAMK,EAAS,yCAAG,gGAChBX,EAAe,GADC,UAEEO,EAAAA,EAAAA,IAAiB,CACjCC,KAAM,IAHQ,OAEVC,EAFU,OAKhBT,GAAe,SAAAU,GAAG,OAAIA,EAAM,CAAV,IAClBd,QAAQC,IAAI,MAAOY,GACdA,EAAIR,MAIPC,GAAQ,SAAAQ,GAAG,cAAQD,EAAIR,KAAZ,IACXK,GAAW,SAAAI,GAAG,OAAI,CAAJ,MAJdR,EAAQ,IACRI,GAAW,SAAAI,GAAG,OAAI,CAAJ,KATA,2CAAH,qDAkBf,OAHAE,EAAAA,EAAAA,YAAU,WACRC,SAASC,MAAQ,0BAClB,GAAE,KAED,gBAAKC,UAAU,UAAf,UAEE,SAAC,KAAD,CACEJ,WAAS,uBAAE,4GAAYA,KAAZ,2CADb,UAGA,iBAAKI,UAAU,aAAf,UAEId,EAAKe,KAAI,SAACC,EAAMC,GAAP,OACP,iBAAKH,UAAU,aAAyBI,QAAS,kBA7DlC,SAACF,GACxBrB,QAAQC,IAAI,mBAAoBoB,GACZ,IAAhBA,EAAKG,OAGPC,EAAAA,EAAAA,SAAe,eAAgB,CAC7BC,GAAIL,EAAKK,KAGXC,EAAAA,GAAAA,KAAW,CACTC,QAAS,kCAGd,CAgDgEC,CAAiBR,EAAvB,EAAjD,WACE,gBAAKF,UAAU,YAAf,SACGE,EAAKH,SAER,gBAAKC,UAAU,YAAf,SACGE,EAAKS,aAER,iBAAKX,UAAU,YAAf,2CACME,EAAKU,WADX,IACwBV,EAAKW,aAE7B,iBAAKb,UAAU,YAAf,WACE,gBAAKA,UAAU,cAAf,SAEoB,IAAhBE,EAAKG,QAEL,iBAAML,UAAU,KAAhB,6CAGA,iBAAMA,UAAU,MAAhB,+CAKJ,gBAAKA,UAAU,cAAcI,QAAS,SAACU,GAAD,OAzF5B,SAACZ,EAAMY,GAC7BA,EAAEC,kBACF3B,EAAS,kBAAmB,CAAE4B,OAAM,UAAMd,GAAQe,SAAS,GAC5D,CAsF0DC,CAAgBhB,EAAMY,EAA7B,EAAtC,2CAvB6BX,EAD1B,KA+BX,SAAC,KAAD,CAAgBgB,SAtGJ,2CAsGwB7B,QAASA,EAA7C,SACGA,GAED,iCACE,kDACA,SAAC,KAAD,OAGEJ,EAAKkC,QAEL,8DAGE,gBAAKpB,UAAU,gBAAf,UACE,iBAAKA,UAAU,eAAf,WACE,gBAAKqB,IAAKC,EAAQ,MAAgCC,IAAI,MACtD,gGASnB,C","sources":["pages/myEvent/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport utils from '../../utils/index'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Crumbs1 from '../../components/crumbs1'\r\nimport { PullToRefresh, InfiniteScroll, DotLoading, Toast } from 'antd-mobile'\r\n// import { sleep } from 'antd-mobile/es/utils/sleep'\r\n// import { mockRequest } from './mock-request.jsx'\r\nimport './index.scss'\r\nimport { promotionListApi } from '../../axios/api'\r\nfunction MyEvent () {\r\n  console.log('myevent')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [data, setData] = useState([])\r\n  const navigate = useNavigate()\r\n  // 查看奖品\r\n  const handleViewPrize = (item, e) => {\r\n    e.stopPropagation()\r\n    navigate('/layout/myPrize', { state: { ...item }, replace: false })\r\n  }\r\n  // 查看活动详情\r\n  const handleViewDetail = (item) => {\r\n    console.log('handleViewDetail', item)\r\n    if (item.status === 1) {\r\n      // utils.hashPush('/layout/home', item)\r\n      // navigate('/layout/home', { state: { ...item }, replace: false })\r\n      utils.hashPush('/layout/home', {\r\n        id: item.id\r\n      })\r\n    } else {\r\n      Toast.show({\r\n        content: '活动结束了'\r\n      })\r\n    }\r\n  }\r\n\r\n  const [hasMore, setHasMore] = useState(true)\r\n  async function loadMore () {\r\n    // const append = await mockRequest([\r\n    //   { id: '1', status: 1 },\r\n    //   { id: '2', status: 0 }\r\n    // ])\r\n    const res = await promotionListApi({\r\n      page: currentPage\r\n    })\r\n    setCurrentPage(val => val + 1)\r\n    console.log('res', res)\r\n    if (!res.data) {\r\n      setHasMore(false)\r\n    } else {\r\n      setData(val => [...val, ...res.data])\r\n      setHasMore(true)\r\n    }\r\n  }\r\n  // 下拉刷新\r\n  const onRefresh = async () => {\r\n    setCurrentPage(1)\r\n    const res = await promotionListApi({\r\n      page: 1\r\n    })\r\n    setCurrentPage(val => val + 1)\r\n    console.log('res', res)\r\n    if (!res.data) {\r\n      setData([])\r\n      setHasMore(val => false)\r\n    } else {\r\n      setData(val => [...res.data])\r\n      setHasMore(val => true)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    document.title = '我的活动'\r\n  }, [])\r\n  return (\r\n    <div className=\"myEvent\">\r\n      {/* <Crumbs1 text='我的活动'></Crumbs1> */}\r\n      <PullToRefresh\r\n        onRefresh={async () => onRefresh()}\r\n      >\r\n      <div className=\"event-list\">\r\n        {\r\n          data.map((item, index) => (\r\n            <div className=\"event-item\" key={index} onClick={() => handleViewDetail(item)}>\r\n              <div className=\"item-row1\">\r\n                {item.title}\r\n              </div>\r\n              <div className=\"item-row2\">\r\n                {item.sub_title}\r\n              </div>\r\n              <div className=\"item-row3\">\r\n              抢购时间：{item.start_time}-{item.end_time}\r\n              </div>\r\n              <div className=\"item-row4\">\r\n                <div className=\"item-row4-l\">\r\n                  {\r\n                    item.status === 1\r\n                      ? (\r\n                    <span className=\"on\">活动进行中</span>\r\n                        )\r\n                      : (\r\n                    <span className=\"off\">活动已结束</span>\r\n                        )\r\n\r\n                  }\r\n                </div>\r\n                <div className=\"item-row4-r\" onClick={(e) => handleViewPrize(item, e)}>\r\n                  查看奖品\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        }\r\n        <InfiniteScroll loadMore={loadMore} hasMore={hasMore} >\r\n          {hasMore\r\n            ? (\r\n          <>\r\n            <span>加载中</span>\r\n            <DotLoading />\r\n          </>\r\n              )\r\n            : data.length\r\n              ? (\r\n              <span>没有更多了</span>\r\n                )\r\n              : (\r\n                <div className=\"empty-content\">\r\n                  <div className=\"empty-center\">\r\n                    <img src={require('../../assets/empty-icon.png')} alt=\"\" />\r\n                    <span>~ 您还没有参与活动 ~</span>\r\n                  </div>\r\n                </div>\r\n                )}\r\n        </InfiniteScroll>\r\n      </div>\r\n      </PullToRefresh>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyEvent\r\n"],"names":["console","log","useState","currentPage","setCurrentPage","data","setData","navigate","useNavigate","hasMore","setHasMore","promotionListApi","page","res","val","onRefresh","useEffect","document","title","className","map","item","index","onClick","status","utils","id","Toast","content","handleViewDetail","sub_title","start_time","end_time","e","stopPropagation","state","replace","handleViewPrize","loadMore","length","src","require","alt"],"sourceRoot":""}
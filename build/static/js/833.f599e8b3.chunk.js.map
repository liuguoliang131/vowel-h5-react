{"version":3,"file":"static/js/833.f599e8b3.chunk.js","mappings":"2RAoMA,MA5LA,WACE,OAAwBA,EAAAA,EAAAA,UAAS,CAC/BC,UAAW,GACXC,YAAa,GACbC,WAAY,KAHd,eAAOC,EAAP,KAAaC,EAAb,KAKMC,GAAUC,EAAAA,EAAAA,UACVC,GAAUD,EAAAA,EAAAA,UACVE,GAAWC,EAAAA,EAAAA,MAWXC,EAAO,yCAAG,0GACIC,EAAAA,EAAAA,IAA4B,CAC5CC,aAAcJ,EAASK,MAAMC,IAAM,IAFvB,UAIG,KAHXC,EADQ,QAINC,KAJM,0CAKL,GALK,OAOdZ,EAAQW,EAAIZ,MAPE,2CAAH,qDAUPc,EAAa,WAEjB,GADAC,QAAQC,IAAI,UAAWZ,GACnBF,EAAQe,SAAWb,EAAQa,QAAS,CAEtC,IAAMC,EAAOhB,EAAQe,QACfE,EAASf,EAAQa,QACvBE,EAAOC,MAAQF,EAAKG,YACpBF,EAAOG,OAASJ,EAAKK,aAErB,IAAMC,EAAa,IACbC,EAAc,IACdC,EAAM,CACVC,EAAG,EACHC,EAAG,EACHR,MAAO,EACPE,OAAQ,GAEVI,EAAIC,EAAuB,GAAnBT,EAAKG,YAAmBG,EAChCE,EAAIE,EAAwB,GAApBV,EAAKK,aAAoBE,EACjCC,EAAIN,MAA2B,GAAnBF,EAAKG,YAAmBG,EACpCE,EAAIJ,OAA4B,GAAnBJ,EAAKG,YAAmBG,EAErC,IAAMK,EAAQ,CACZF,EAAsB,GAAnBT,EAAKG,YAAmBG,EAC3BI,EAAuB,GAApBV,EAAKK,aAAoBE,EAC5BK,SAA8B,GAApBZ,EAAKK,aAAoBE,GAG/BM,EAAK,CACTJ,EAAsB,IAAnBT,EAAKG,YAAoBG,EAC5BI,EAAuB,IAApBV,EAAKK,aAAqBE,EAC7BL,MAA0B,GAAnBF,EAAKG,YAAmBG,EAC/BF,OAA2B,GAAnBJ,EAAKG,YAAmBG,GAE5BQ,EAAMb,EAAOc,WAAW,MAE1BC,EAAQ,MACZA,EAAQ,IAAIC,OACNC,YAAc,YAEpBF,EAAMG,IAAMrC,EAAKD,WAEjBmC,EAAMI,OAAS,WAEbN,EAAIO,UAAUL,EAAO,EAAG,EAAGhB,EAAKG,YAAaH,EAAKK,cAElD,IAAIiB,EAAW,MACfA,EAAWC,SAASC,cAAc,QACzBpB,OAASS,EAAGT,OACrBkB,EAASpB,MAAQW,EAAGX,MACpB,IArEauB,EAAQC,EAASC,EAAOC,EAASC,EAqExCC,EAAWC,OAAO5C,SAAS6C,SAAW,KAAOD,OAAO5C,SAAS8C,KAAlD,4BAA8E9C,EAASK,MAAMC,GAA7F,uBAA8GX,EAAKoD,YAC9HC,GAtEOV,EAsEeZ,EAAGX,MAtEVwB,EAsEiBb,EAAGT,OAtEXuB,EAsEmBG,EAtEZF,EAsEsB,SAtEbC,EAsEuBP,EArElE,IAAIc,IAAJ,CAAWP,EAAK,CACrB3B,MAAOuB,EACPrB,OAAQsB,EACRW,KAAMV,EACNW,OAAQV,EACRW,aAAc,KAiERC,EAAU,KACdA,EAAUL,EAAUM,IAAIC,SAAS,GACjC1B,EAAME,YAAc,YACpBsB,EAAQpB,OAAS,WACfN,EAAIO,UAAUmB,EAAS3B,EAAGJ,EAAGI,EAAGH,EAAGG,EAAGX,MAAOW,EAAGX,OAEhDY,EAAI6B,KAAJ,UAAchC,EAAMC,SAApB,kBAEAE,EAAI8B,UAAY,OAEhB/C,QAAQC,IAAI,mBAAoBa,EAAMF,EAAGE,EAAMD,GAC/CI,EAAI+B,SAAS/D,EAAKH,UAAWgC,EAAMF,EAAGE,EAAMD,GAE5C,IAAIoC,EAAS,MACbA,EAAS,IAAI7B,OACNC,YAAc,YACrB4B,EAAO3B,IAAMrC,EAAKF,YAClBkE,EAAO1B,OAAS,WACdvB,QAAQC,IAAI,sCAAuCU,EAAIC,EAAGD,EAAIE,EAAGF,EAAIN,MAAOM,EAAIJ,QAEhFU,EAAIiC,IAAIvC,EAAIC,EAAKD,EAAIN,MAAQ,EAAIM,EAAIE,EAAKF,EAAIJ,OAAS,EAAII,EAAIN,MAAQ,EAAG,EAAa,EAAV8C,KAAKC,IAClFnC,EAAIoC,OAEJpC,EAAIO,UAAUyB,EAAQtC,EAAIC,EAAGD,EAAIE,EAAGF,EAAIN,MAAOM,EAAIJ,OACpD,CACF,CACF,CACF,CACF,EAiBK+C,EAAS,WACbjE,EAAQa,QAAQqD,QAAO,SAACC,GACtB,IAAMC,EAAYC,KAAKC,MAAMC,WACvBC,EAAInC,SAASC,cAAc,KACjCD,SAASoC,KAAKC,OAAOF,GACrBA,EAAEG,SAAF,UAAgBP,EAAhB,QACAI,EAAEI,KAAOC,IAAIC,gBAAgBX,GAC7BK,EAAEO,QACFP,EAAEQ,QACH,GACF,EAOD,OANAC,EAAAA,EAAAA,YAAU,WACR9E,GACD,GAAE,KACH8E,EAAAA,EAAAA,YAAU,WACRvE,GACD,GAAE,CAACV,EAASF,EAASF,KAEpB,iBAAKsF,UAAU,SAAf,WACE,SAAC,IAAD,CAAS/B,KAAK,6BAEZvD,EAAKoD,YAED,iCACA,gBAAKkC,UAAU,aAAf,UACA,gBAAKA,UAAU,OAAOC,IAAKrF,EAA3B,UACE,mBAAQqF,IAAKnF,SAGjB,iBAAKkF,UAAU,aAAf,WACA,cAAGA,UAAU,WAAWP,UAAQ,EAACC,KAAK,eAAeQ,QAAS,WA3CpEnB,GA2CoE,EAA9D,mDAGA,iBAAKiB,UAAU,mBAAf,WACE,iBAAKA,UAAU,OAAf,WACE,gBAAKA,UAAU,YACf,gBAAKA,UAAU,eAEjB,gBAAKA,UAAU,cAAf,qEACA,iBAAKA,UAAU,aAAf,WACE,iBAAKA,UAAU,qBAAf,WACE,gBAAKE,QAAS,kBAAMC,EAAAA,EAAAA,aAAmB,QAAS,OAAQ,wBAAyB,WAAnE,EAAgFpD,IAAKqD,EAAQ,MAA8BC,IAAI,MAC7I,+CAEF,iBAAKL,UAAU,qBAAf,WACA,gBAAKE,QAAS,kBAAMC,EAAAA,EAAAA,aAAmB,QAAS,OAAQ,wBAAyB,WAAnE,EAAgFpD,IAAKqD,EAAQ,MAAmCC,IAAI,MAChJ,gEAQJ,OAMX,C","sources":["pages/poster/index.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\r\nimport './index.scss'\r\nimport { Toast } from 'antd-mobile'\r\nimport Crumbs1 from '../../components/crumbs1'\r\nimport utils from '../../utils/index'\r\nimport QRCode from 'qrcodejs2'\r\nimport { promotionSharePosterListApi } from '../../axios/api'\r\nimport { useLocation } from 'react-router-dom'\r\nfunction Poster () {\r\n  const [data, setData] = useState({\r\n    user_name: '',\r\n    user_avatar: '',\r\n    poster_url: ''\r\n  })\r\n  const fullRef = useRef()\r\n  const viewRef = useRef()\r\n  const location = useLocation()\r\n  // 生成二维码函数\r\n  const getQrcode = (qWidth, qHeight, qText, qRender, dom) => {\r\n    return new QRCode(dom, {\r\n      width: qWidth,\r\n      height: qHeight,\r\n      text: qText,\r\n      render: qRender,\r\n      correctLevel: 1\r\n    })\r\n  }\r\n  const getData = async () => {\r\n    const res = await promotionSharePosterListApi({\r\n      promotion_id: location.state.id || 1\r\n    })\r\n    if (res.code !== 0) {\r\n      return false\r\n    }\r\n    setData(res.data)\r\n  }\r\n\r\n  const initCanvas = () => {\r\n    console.log('viewRef', viewRef)\r\n    if (fullRef.current && viewRef.current) {\r\n      // 获取父盒子宽度\r\n      const full = fullRef.current\r\n      const canvas = viewRef.current\r\n      canvas.width = full.offsetWidth\r\n      canvas.height = full.offsetHeight\r\n      // 参照比例\r\n      const scaleWidth = 375\r\n      const scaleHeight = 517\r\n      const ava = {\r\n        x: 0,\r\n        y: 0,\r\n        width: 0,\r\n        height: 0\r\n      }// 头像\r\n      ava.x = full.offsetWidth * 14 / scaleWidth\r\n      ava.y = full.offsetHeight * 17 / scaleHeight\r\n      ava.width = full.offsetWidth * 30 / scaleWidth\r\n      ava.height = full.offsetWidth * 30 / scaleWidth\r\n      // 文本\r\n      const title = {\r\n        x: full.offsetWidth * 50 / scaleWidth,\r\n        y: full.offsetHeight * 37 / scaleHeight,\r\n        fontSize: full.offsetHeight * 15 / scaleHeight\r\n      }\r\n      // 二维码\r\n      const qr = {\r\n        x: full.offsetWidth * 147 / scaleWidth,\r\n        y: full.offsetHeight * 405 / scaleHeight,\r\n        width: full.offsetWidth * 82 / scaleWidth,\r\n        height: full.offsetWidth * 82 / scaleWidth\r\n      }\r\n      const ctx = canvas.getContext('2d')\r\n      // 创建图片\r\n      let image = null\r\n      image = new Image()\r\n      image.crossOrigin = 'Anonymous'\r\n      // 设置图片地址\r\n      image.src = data.poster_url\r\n      // 必须要在onLoad之后再进行绘制图片，否则不会渲染\r\n      image.onload = function () {\r\n        // 4各参数 图片的起始坐标和宽高\r\n        ctx.drawImage(image, 0, 0, full.offsetWidth, full.offsetHeight)\r\n        // 生成二维码\r\n        let qrCanvas = null\r\n        qrCanvas = document.createElement('div')\r\n        qrCanvas.height = qr.height\r\n        qrCanvas.width = qr.width\r\n        const shareUrl = window.location.protocol + '//' + window.location.host + `/#/layout/home?id=${location.state.id}&share_sign=${data.share_sign}`\r\n        const qrcodeObj = getQrcode(qr.width, qr.height, shareUrl, 'canvas', qrCanvas)\r\n        let codeImg = null\r\n        codeImg = qrcodeObj._el.children[1]\r\n        image.crossOrigin = 'Anonymous'\r\n        codeImg.onload = function () {\r\n          ctx.drawImage(codeImg, qr.x, qr.y, qr.width, qr.width)\r\n          // 绘制文本\r\n          ctx.font = `${title.fontSize}px PingFang SC` // 设置文案大小和字体\r\n          // ctx.direction = 'ltr' // 文本方向从左向右\r\n          ctx.textAlign = 'left' // 左对齐\r\n          // ctx.fillStyle = '#ffff'\r\n          console.log('title.x, title.y', title.x, title.y)\r\n          ctx.fillText(data.user_name, title.x, title.y)\r\n          // 层级之上\r\n          let avaImg = null\r\n          avaImg = new Image()\r\n          avaImg.crossOrigin = 'Anonymous'\r\n          avaImg.src = data.user_avatar\r\n          avaImg.onload = function () {\r\n            console.log('ava.x, ava.y, ava.width, ava.height', ava.x, ava.y, ava.width, ava.height)\r\n            // 创建圆形裁剪路径\r\n            ctx.arc(ava.x + (ava.width / 2), ava.y + (ava.height / 2), ava.width / 2, 0, Math.PI * 2)\r\n            ctx.clip()\r\n            // 创建完后绘制\r\n            ctx.drawImage(avaImg, ava.x, ava.y, ava.width, ava.height)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // 保存海报到本地\r\n  const handleSavePoster = () => {\r\n    onSave()\r\n    // try {\r\n    //   const btn = document.createElement('a')\r\n    //   btn.download = '分享海报'\r\n    //   btn.href = viewRef.current.toDataURL('image/png;base64')\r\n    //   btn.click()\r\n    // } catch (error) {\r\n    //   console.log(error)\r\n    //   Toast.show({\r\n    //     content: `${JSON.stringify(error)}`\r\n    //   })\r\n    // }\r\n  }\r\n  const onSave = () => {\r\n    viewRef.current.toBlob((blob) => {\r\n      const timestamp = Date.now().toString()\r\n      const a = document.createElement('a')\r\n      document.body.append(a)\r\n      a.download = `${timestamp}.png`\r\n      a.href = URL.createObjectURL(blob)\r\n      a.click()\r\n      a.remove()\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    getData()\r\n  }, [])\r\n  useEffect(() => {\r\n    initCanvas()\r\n  }, [viewRef, fullRef, data])\r\n  return (\r\n    <div className=\"poster\">\r\n      <Crumbs1 text=\"抽奖海报\"></Crumbs1>\r\n      {\r\n        data.share_sign\r\n          ? (\r\n            <>\r\n            <div className=\"poster-box\">\r\n            <div className='full' ref={fullRef}>\r\n              <canvas ref={viewRef}></canvas>\r\n            </div>\r\n          </div>\r\n          <div className=\"bottom-box\">\r\n          <a className=\"save-the\" download href=\"javascript:;\" onClick={() => handleSavePoster()}>\r\n            点击保存海报\r\n          </a>\r\n          <div className=\"bottom-box-share\">\r\n            <div className=\"line\">\r\n              <div className=\"line-1\"></div>\r\n              <div className=\"line-1\"></div>\r\n            </div>\r\n            <div className=\"share-title\">分享至微信或朋友圈</div>\r\n            <div className=\"share-btns\">\r\n              <div className=\"share-btns-friends\">\r\n                <img onClick={() => utils.shareWebToWX('title', 'desc', 'https://www.baidu.com', 'coverurl')} src={require('../../assets/share-wx.png')} alt=\"\" />\r\n                <span>微信</span>\r\n              </div>\r\n              <div className=\"share-btns-friends\">\r\n              <img onClick={() => utils.shareWebToWX('title', 'desc', 'https://www.baidu.com', 'coverurl')} src={require('../../assets/share-friends.png')} alt=\"\" />\r\n                <span>朋友圈</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n            </>\r\n\r\n            )\r\n          : null\r\n\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Poster\r\n"],"names":["useState","user_name","user_avatar","poster_url","data","setData","fullRef","useRef","viewRef","location","useLocation","getData","promotionSharePosterListApi","promotion_id","state","id","res","code","initCanvas","console","log","current","full","canvas","width","offsetWidth","height","offsetHeight","scaleWidth","scaleHeight","ava","x","y","title","fontSize","qr","ctx","getContext","image","Image","crossOrigin","src","onload","drawImage","qrCanvas","document","createElement","qWidth","qHeight","qText","qRender","dom","shareUrl","window","protocol","host","share_sign","qrcodeObj","QRCode","text","render","correctLevel","codeImg","_el","children","font","textAlign","fillText","avaImg","arc","Math","PI","clip","onSave","toBlob","blob","timestamp","Date","now","toString","a","body","append","download","href","URL","createObjectURL","click","remove","useEffect","className","ref","onClick","utils","require","alt"],"sourceRoot":""}